@{
    ViewBag.Title = "Home";
    ViewBag.Tab = "Home";
}
<section class="featured">
    <div>
        <h1>ReSharper Gallery</h1>
        <p >Host your ReSharper's plugins here!</p>
        <p class="sub"><em>So <a href="http://www.jetbrains.com/resharper/download/index.html">install ReSharper</a> and get a jump on your next plugin!</em></p>
        <a class="install" href="http://www.jetbrains.com/resharper/download/index.html">Install ReSharper</a>
    </div>
    <img src="@Url.Content("~/content/images/hero.png")" alt="NuGet GUI Window" />
</section> 

<section class="aggstats">
    <span class="stat">
        <span id="UniquePackages" class="num"></span> unique packages
    </span>
    <span class="stat">
        <span id="Downloads" class="num"></span>total downloads
    </span>
    <span class="stat">
        <span id="TotalPackages" class="num"></span>total packages
    </span>
</section>

<section class="aggstatserr">
    <span class="err">an error occurred while retrieving statistics</span>
</section>

<section class="release">
     <h2>NuGet 2.2.1 Released</h2> 
     <p>
        Take a few seconds and UPGRADE NOW using the Visual Studio Extension Manager. Why? Because there's a pile of new features and it will  
        make your life easier! All these details and <a href="http://docs.nuget.org/docs/release-notes/nuget-2.2.1">more here...</a>
     </p>
     <p>
        <strong>NOTE: </strong>Boo.
     </p>
</section>

<section class="info">
    <h3>About</h3>
    <p>When you use NuGet to install a package, it copies the library files to your solution and automatically updates your project 
        (add references, change config files, etc.). If you remove a package, NuGet reverses whatever changes it made so that no clutter is left.</p>

    <h3>Important Notice</h3>
    <p>You can develop your own package and share it via the ReSharper Gallery. Read the documentation for more details on 
        <a title="Creating and submitting a package" href="http://docs.nuget.org/docs/creating-packages/creating-and-publishing-a-package">how to 
            create and publish a package</a>.</p>
</section>

@section BottomScripts
{
    @* Right now this is the only page that uses this script. If we increase our usage of it, we should put it in our bundles *@
    @Scripts.Render("~/Scripts/stats.js")
    <script>
        $(getStats);
    </script>
}
